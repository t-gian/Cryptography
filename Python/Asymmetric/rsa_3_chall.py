from Crypto.Util.number import bytes_to_long, getPrime
from secret import flag
import numpy as np

primes = [getPrime(512) for _ in range(10)]
mods = [np.random.choice(primes,2,replace=False) for _ in range(6)]
mods = [m[0]*m[1] for m in mods]
e = 65537
print(mods)
m = bytes_to_long(flag)
print([pow(m,e,n) for n in mods])

#[104797333514005431489487099243817924396323703824816284316415471464668113403031969324178086924762399750143357615422704148855607286721699936853055066055913840469427109382145239725290721474810603236505300173784099426806497759947657824589661130147273082559384531128618479090210632123225815492873515472042610866469, 150130854009801356838925431996755273393932489696447173225652381803546974572522069798393298772738844153363759307908167827779619378785040829116102146709602516145848902096088911375340557971866282274232326091160762550479792203912753560431515112437152713669832616820758217573585402461916888884635440497527653857581, 127760812215225557560314437200499624622992783557154728399260822320402896281614602214592564255160366949293609495152355871628907285407780757395387650024837228777786138402526661085287775098411974128036752895665132420752898942363585991246622960896690556937893915527538963861131515450823112905263161736657265164211, 148006756435651623396184626192402637679924684540592120818264086620331728246012591099511679241316978002620075567828668590835587074724676805507698888903758259474204514836303978694878106710280305164636789626118787824588101806154331842847228058916873884630625492242525823991159054848832996702608867519251854452033, 88260543595622482063676281549964552687531032731093470570242014273810884860324017821488009062975193519404384145091008175840208832276722296540150276307718963602623872357327231718479496375582989462620661361269759228814373001492902816727312306495728625531912542203641885057555117107125567761024310954995465159651, 113475742201748762988518146679902538499847781584453243806906671794027751446743916554921732092349294718994715758104865384620214785277002028596801156618701734214859166808118862753230592667183665734908492627813414683047635574195946936824705310134551171828351666224564792822002061516715586926460188273807391950883]
#[50933569077682540397064477888602903799790959520783949527330374716756929176282142760976602610383710235405558526577169623434813640503958309002963698228042578689527337044286798395031031437680293433890373328569804499390286013580256041568711395604384533808281242124137924044882711528799110626858300299811495098491, 20295676251501388277679955101395633806918645393912185891232816882041216871565786153171784726410281291271634021820086228906979556420200517169395301257676665155129240298529475861326021445826111670046347716553604147919851064552409156323166622355870047990352657974345952537331972846500365318367823686818799588346, 32963886128478592091915394516558073340098214527551752722825282868274218159973801251912387317562437285863822266923204336958091350149471307854066253038076212130253690524344457225534119986088623958368786445166122133171563686112114719016945152949251249491577739613557437025236439724246029121837331032420000060317, 55724375467302236878555106793865347223746329040362189868055447412396832404190631045546339920936377686270390575586166531404811314720125411648774254144456104626790978483812177336459454380221541776507650665546365881499815456414726775034227663866971897845885460327357472180707373406953384525999212754644060742708, 63789714176779251442022757411726994672997164249176603066340277725777511307748145531259304948775209498332290935734874329651717875714866557877346837443121066248026221111904832541194250551689462634924985640844081760796845149716748775654846744036323256517975465803036095473029720432615494814261016503707743219209, 80407368240918717254291988885964069745806784241980847969884555842963572897894889506687478717893482158508610599759729022955434323198595031811379000489492091882432646274182341058744640511411498138051723037209600869902652702829028081668487883033103552454897570959221378170333463676161648974480104200358370883322]