n= 148758140571519421113103657438725449613091209272451250208345488213767494166740418153678486394123859994826784382971575831748913972673953192679356299127135305250669651025353730293494690699010974989511388419217506874603689794779387912343290731259378025826316663851302062354499790429450768533840608076501292838043
e= 65537
ct= 121103834251439447845049371291443489363297347007767183079522603281240675771017341325728082357866466317879791821058958269818242514262904813657519801607485317972870937212797500399259621229170271985806218797274374508708675534308443372501845559069858276556876266096324440310015904077270866746885033298268223860231

#factordb

p = 12196644643979729440459675925241352460515542589881690277202263529403027945364046213550034759839234582354276572793547434617886074476078921112709250066884187
q = 12196644643979729440459675925241352460515542589881690277202263529403027945364046213550034759839234582354276572793547434617886074476078921112709250066884289
t=(p-1)*(q-1)
import gmpy2
d = gmpy2.invert(e,t)

# Decryption
decimalmessage = pow(ct,d,n)
print(decimalmessage)
hexmessage= hex(decimalmessage)
print(hexmessage)
byte_values = bytes.fromhex(hexmessage[2:])
result_string = byte_values.decode('utf-8')

print(result_string)
#https://github.com/d4rkvaibhav/picoCTF-2018-Writeups/tree/master/Cryptography/Super%20safe%20RSA
#https://www.alpertron.com.ar/ECM.HTM